{"version":3,"sources":["img/Isgmuseum-2-min.jpg","screens/Experience.js","screens/Projects.js","components/ProfilePicture.js","screens/AboutMe.js","screens/Contact.js","components/SocialMediaLinks.js","App.js","serviceWorker.js","redux/store.js","redux/reducers/siteReducer.js","index.js","img/resume.pdf"],"names":["module","exports","__webpack_require__","p","experiences","react_default","a","createElement","Header","Experience","List","_","times","length","i","Item","key","Message","projects","href","Projects","ProfilePicture","className","style","backgroundImage","concat","profileImage","AboutMe","Container","textAlign","Contact","align","SocialMediaLinks","Grid","columns","stretched","Column","react_social_icons","url","App","fluid","rows","marginTop","Row","floated","width","as","components_ProfilePicture","Tab","menu","fixed","widths","size","panes","menuItem","Menu","Icon","name","dist_default","m","up","render","screens_AboutMe","screens_Projects","screens_Experience","resume","screens_Contact","Divider","hidden","components_SocialMediaLinks","Component","Boolean","window","location","hostname","match","middleware","initialState","firstLoading","applyMiddleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","site","state","arguments","undefined","type","Object","objectSpread","setDefaultBreakpoints","xs","s","l","xl","ReactDOM","dist","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0YCgBlCC,EAAc,CAChBC,EAAAC,EAAAC,cAbgB,iBAAM,CACtBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBACAH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8DAA2DF,EAAAC,EAAAC,cAAA,WAC7DF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4HACAF,EAAAC,EAAAC,cAAA,0HACAF,EAAAC,EAAAC,cAAA,oHACAF,EAAAC,EAAAC,cAAA,qIAMR,OAmBWE,EAhBI,WACf,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACKC,IAAEC,MAAMR,EAAYS,OAAQ,SAACC,GAAD,OACzBT,EAAAC,EAAAC,cAACG,EAAA,EAAKK,KAAN,CAAWC,IAAKF,GACZT,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACKb,EAAYU,UC6BnCI,EAAW,CACbb,EAAAC,EAAAC,cArDkB,iBAAM,CACxBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,uBACAH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6FAAqF,IACvFF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,0BAAR,kBADE,MACoDd,EAAAC,EAAAC,cAAA,KAAGY,KAAK,0BAAR,oBAA2Dd,EAAAC,EAAAC,cAAA,WACjHF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4HACAF,EAAAC,EAAAC,cAAA,kIACAF,EAAAC,EAAAC,cAAA,gHACAF,EAAAC,EAAAC,cAAA,6HA6CR,MACAF,EAAAC,EAAAC,cA7BoC,iBAAM,CAC1CF,EAAAC,EAAAC,cAACC,EAAA,EAAD,iDACAH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8CAA2CF,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,6HACAF,EAAAC,EAAAC,cAAA,gIACAF,EAAAC,EAAAC,cAAA,6HACAF,EAAAC,EAAAC,cAAA,mIAsBR,MACAF,EAAAC,EAAAC,cAlBmC,iBAAM,CACzCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,kCACAH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,qBAAa,IAAb,IAAkBF,EAAAC,EAAAC,cAAA,KAAGY,KAAK,8DAAR,aAAwFd,EAAAC,EAAAC,cAAA,WAC5GF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kIACAF,EAAAC,EAAAC,cAAA,6HACAF,EAAAC,EAAAC,cAAA,+HAYR,OAmBWa,EAhBE,WACb,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACKC,IAAEC,MAAMM,EAASL,OAAQ,SAACC,GAAD,OACtBT,EAAAC,EAAAC,cAACG,EAAA,EAAKK,KAAN,CAAWC,IAAKF,GACZT,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACKC,EAASJ,qCC1DvBO,EARQ,WACnB,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,2CAA2CC,MAAO,CAACC,gBAAe,OAAAC,OAASC,IAAT,UCyB9EC,EAxBC,WACZ,OACItB,EAAAC,EAAAC,cAAA,WAOIF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAWC,UAAU,UACjBxB,EAAAC,EAAAC,cAACU,EAAA,EAAD,gJAE+CZ,EAAAC,EAAAC,cAAA,iBAF/C,eAEsEF,EAAAC,EAAAC,cAAA,sBAFtE,kBAEqGF,EAAAC,EAAAC,cAAA,qBAFrG,4CAGoCF,EAAAC,EAAAC,cAAA,uBAHpC,mCAGqFF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAH1F,0UCHDuB,EAXC,WACZ,OACIzB,EAAAC,EAAAC,cAAA,OAAKwB,MAAM,UACP1B,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASY,UAAU,UAAnB,mDAEIxB,EAAAC,EAAAC,cAAA,KAAGY,KAAM,0BAA2B,IAApC,aAFJ,eCoBGa,EAtBU,WACrB,OACI3B,EAAAC,EAAAC,cAAA,OAAKwB,MAAM,UACP1B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,GACvB9B,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,MACA/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,MACA/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,WAAD,CAAYC,IAAI,yCAEpBjC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,WAAD,CAAYC,IAAI,+CAEpBjC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,WAAD,CAAYC,IAAI,qCAEpBjC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,MACA/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,0BCuGDG,2LA3GP,OACIlC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACXjB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMO,OAAK,EAACC,KAAM,EAAGP,QAAS,EAAGX,MAAO,CAACmB,UAAW,QAChDrC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKU,IAAN,MACAtC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKU,IAAN,KACItC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,CAAaQ,QAAQ,OAAOC,MAAO,IACnCxC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,CAAaS,MAAO,IAChBxC,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACIZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQsC,GAAG,KAAKjB,UAAU,UAA1B,aACAxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQsC,GAAG,KAAKjB,UAAU,UAA1B,uCAEJxB,EAAAC,EAAAC,cAACwC,EAAD,OAEJ1C,EAAAC,EAAAC,cAAC0B,EAAA,EAAKG,OAAN,CAAaQ,QAAQ,QAAQC,MAAO,KAExCxC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKU,IAAN,OAEJtC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAKC,KAAM,CAACC,MAAO,MAAOC,OAAQ,EAAGC,KAAM,SAAUvB,UAAU,SAC3DwB,MAAO,CAAC,CACJC,SACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAKxC,KAAN,CAAWC,IAAK,GACZX,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,KAAK,wBACXpD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAYqD,GAAC,EAACC,IAAE,GAAhB,aAERC,OAAQ,WACJ,OACIxD,EAAAC,EAAAC,cAACuD,EAAD,QAGV,CACER,SACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAKxC,KAAN,CAAWC,IAAK,GACZX,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,KAAK,WACXpD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAYqD,GAAC,EAACC,IAAE,GAAhB,aAERC,OAAQ,WACJ,OACIxD,EAAAC,EAAAC,cAACwD,EAAD,QAGV,CACET,SACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAKxC,KAAN,CAAWC,IAAK,GACZX,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,KAAK,aACXpD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAYqD,GAAC,EAACC,IAAE,GAAhB,eAERC,OAAQ,WACJ,OACIxD,EAAAC,EAAAC,cAACyD,EAAD,QAGV,CACEV,SACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAKxC,KAAN,CAAWC,IAAK,EAAGG,KAAM8C,KACrB5D,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,KAAK,2BACXpD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAYqD,GAAC,EAACC,IAAE,GAAhB,WAERC,OAAQ,kBACJxD,EAAAC,EAAAC,cAAA,OAAKwB,MAAM,UACP1B,EAAAC,EAAAC,cAAA,yDAAiD,IAC7CF,EAAAC,EAAAC,cAAA,KAAGY,KAAM8C,KAAT,QADJ,QAKV,CAuBEX,SACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAKxC,KAAN,CAAWC,IAAK,GACZX,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAMC,KAAK,mBACXpD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAYqD,GAAC,EAACC,IAAE,GAAhB,YAERC,OAAQ,WACJ,OACIxD,EAAAC,EAAAC,cAAC2D,EAAD,WAKhB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAASC,QAAM,IACf/D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,MACA9D,EAAAC,EAAAC,cAAC8D,EAAD,cAvGEC,qBCFEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCZFC,6CCNEC,EAAe,CACjBC,cAAc,GDUdF,EAAaG,YAAgBC,KAGjC,IAAMC,EACFT,OAAOU,sCAAwCC,IAQpCC,EANDC,YAAYC,YAAgB,CAClCC,KCdO,WAAkC,IAAjCC,EAAiCC,UAAA5E,OAAA,QAAA6E,IAAAD,UAAA,GAAAA,UAAA,GAAzBZ,EAQpB,OAR6CY,UAAA5E,OAAA,EAAA4E,UAAA,QAAAC,GAC9BC,KAEPH,EAAKI,OAAAC,EAAA,EAAAD,CAAA,GACEJ,MDYfP,EAAiBL,IEVrBkB,gCAAsB,CAClB,CAAEC,GAAI,GACN,CAAEC,EAAG,KACL,CAAErC,EAAG,KACL,CAAEsC,EAAG,KACL,CAAEC,GAAI,QAGVC,IAAStC,OACLxD,EAAAC,EAAAC,cAAC6F,EAAA,mBAAD,KACI/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAUjB,MAAOA,GACb/E,EAAAC,EAAAC,cAAC+F,EAAD,QAGNC,SAASC,eAAe,SHyGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCInInB9G,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9540681d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Isgmuseum-2-min.25ad906c.jpg\";","import React from 'react';\r\nimport {List, Message, Header} from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\n\r\nconst LincolnLabs = () => [\r\n    <Header>Lincoln Labs</Header>,\r\n    <p><i><b>Beaver Works Summer Institute Teaching Assistant</b></i><br/>\r\n        <ul>\r\n            <li>Taught students across the U.S. about developing software for autonomous vehicles with ROS, Python, and OpenCV</li>\r\n            <li>Worked with R.A.C.E. C.A.R, MIT’s own mini autonomous car using a ZED Camera, a GPU, a LIDAR, and a IMU</li>\r\n            <li>Wrote exercises, example code, and tutorials for students and guided students through the lesson plans</li>\r\n            <li>Wrote a program to detect AR tags from a camera and draw its outline on a display, utilizing 3D rotational matrices</li>\r\n        </ul>\r\n    </p>\r\n];\r\n\r\nconst experiences = [\r\n    <LincolnLabs/>\r\n];\r\n\r\nconst Experience = () => {\r\n    return (\r\n        <div>\r\n            <List>\r\n                {_.times(experiences.length, (i) => (\r\n                    <List.Item key={i}>\r\n                        <Message>\r\n                            {experiences[i]}\r\n                        </Message>\r\n                    </List.Item>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Experience;","import React from 'react';\r\nimport {List, Header, Message} from 'semantic-ui-react';\r\nimport _ from \"lodash\";\r\n\r\nconst VastusProject = () => [\r\n    <Header>Vastus Venture</Header>,\r\n    <p><i><b>Co-Founder of Vastus Technologies and Full Stack Developer for Vastus Web Apps - {\" \"}\r\n        <a href=\"https://www.vastus.fit\">www.vastus.fit</a> ~ <a href=\"https://www.vastus.pro\">www.vastus.pro</a></b></i><br/>\r\n        <ul>\r\n            <li>Managed a team of 3 developers and a freelancer to develop a ReactJS PWA using a scrum-style Agile methodology</li>\r\n            <li>Began a venture for a challenge-based fitness app, gathering software requirements from and partnering with trainers</li>\r\n            <li>Designed and developed a ReactJS PWA and a backend with AWS, leveraging DynamoDB, a NoSQL database</li>\r\n            <li>Implemented frontend logic and UI components using Redux, Semantic UI, and various React libraries from NPM</li>\r\n        </ul>\r\n    </p>\r\n];\r\n\r\nconst ApocalypseLaterProject = () => [\r\n    <Header>Apocalypse Later</Header>,\r\n    <p><i><b>Created as a final project for NEU Class PHIL 1260. {\" \"}<a href=\"https://github.com/LeoTheMighty/ApocalypseLater\">Github Link</a>!</b></i><br/>\r\n        <ul>\r\n            <li>Managed a team of 3 developers and a freelancer to develop a ReactJS PWA using a scrum-style Agile methodology</li>\r\n            <li>Began a venture for a challenge-based fitness app, gathering software requirements from and partnering with trainers</li>\r\n            <li>Designed and developed a ReactJS PWA and a backend with AWS, leveraging DynamoDB, a NoSQL database</li>\r\n            <li>Implemented frontend logic and UI components using Redux, Semantic UI, and various React libraries from NPM</li>\r\n        </ul>\r\n    </p>\r\n];\r\n\r\nconst SoftwareEngineeringClassProject = () => [\r\n    <Header>Software Engineering Class (WPI CS 3733)</Header>,\r\n    <p><i><b>Assistant Lead Software Engineer</b></i><br/>\r\n        <ul>\r\n            <li>Competed in a ten-person student team using the scrum-style Agile methodology and Java software design patterns</li>\r\n            <li>Created an indoor path-finding app, map builder, and service request module for Brigham & Women’s main campus</li>\r\n            <li>Gathered requirements from surveys, interviews, user stories, storyboards, and developed the framework with UML</li>\r\n            <li>Led database and server teams, designed class hierarchy, and implemented Java sockets to enable real time updates</li>\r\n        </ul>\r\n    </p>\r\n];\r\n\r\nconst WordsWithFriendsCheaterProject = () => [\r\n    <Header>Words With Friends Solver</Header>,\r\n    <p><i><b>Personal {\" \"} <a href=\"https://github.com/LeoTheMighty/words-with-friends-cheater\">project</a></b></i><br/>\r\n        <ul>\r\n            <li>Wrote a “Words With Friends” (similar to Scrabble) cheater script to beat my girlfriend at the mobile game</li>\r\n            <li>Created a Python 3 script that inputs the current board and available pieces, and outputs the best-valued moves</li>\r\n            <li>Used permutations for iteration and utilized Dynamic Programming concepts in order to increase the efficiency</li>\r\n        </ul>\r\n    </p>\r\n];\r\n\r\nconst CPlusPlusIndependentStudy = () => [\r\n    <Header>C++ Independent Study Projects</Header>\r\n];\r\n\r\nconst projects = [\r\n    <VastusProject/>,\r\n    <SoftwareEngineeringClassProject/>,\r\n    <WordsWithFriendsCheaterProject/>,\r\n];\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div>\r\n            <List>\r\n                {_.times(projects.length, (i) => (\r\n                    <List.Item key={i}>\r\n                        <Message>\r\n                            {projects[i]}\r\n                        </Message>\r\n                    </List.Item>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport profileImage from \"../img/Isgmuseum-2-min.jpg\";\r\n\r\nconst ProfilePicture = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"u-avatar u-avatar--huge u-margin-x--auto\" style={{backgroundImage: `url(${profileImage})`}}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePicture;\r\n","import React from 'react';\r\nimport { Grid, Card, Header, Container, Message, Divider } from 'semantic-ui-react';\r\nimport ProfilePicture from \"../components/ProfilePicture\";\r\n\r\n/*\r\nPut your picture, your name, your current status, and your elevator pitch\r\n */\r\nconst AboutMe = () => {\r\n    return (\r\n        <div>\r\n            {/*<Container textAlign=\"center\">*/}\r\n                {/*<Message>*/}\r\n                    {/*<Header>About me</Header>*/}\r\n                {/*</Message>*/}\r\n            {/*</Container>*/}\r\n            {/*<Divider hidden/>*/}\r\n            <Container textAlign=\"center\">\r\n                <Message>\r\n                    My name is Leonid Belyi and I'm a Computer Science Student at the Khoury College of Computer\r\n                    Sciences in Northeastern University. I'm a <i>fast</i> learner, a <i>dedicated</i> worker, and a <i>creative</i> thinker\r\n                    and I am determined to leave my <b>impression</b> on the world in a positive way.<br/><br/>\r\n                    I specialize in leading using the Scrum style methodology of Agile Software Development and I am\r\n                    have the most experience in Full-Stack web development with React.js (what this site is written in),\r\n                    back-end development with Python, node.js, and Java, and managing AWS tech stacks and integrating API\r\n                    endpoints like GraphQL.\r\n                </Message>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport {Message} from 'semantic-ui-react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div align=\"center\">\r\n            <Message textAlign=\"center\">\r\n                All professional inquiries should be directed to\r\n                <a href={\"mailto:leonid@ac93.org\"}>{\" \"} my Email</a>.\r\n            </Message>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Grid} from 'semantic-ui-react';\r\nimport {SocialIcon} from 'react-social-icons';\r\n\r\nconst SocialMediaLinks = () => {\r\n    return (\r\n        <div align=\"center\">\r\n            <Grid columns={7} stretched>\r\n                <Grid.Column/>\r\n                <Grid.Column/>\r\n                <Grid.Column>\r\n                    <SocialIcon url=\"https://www.facebook.com/leo.ntel.1\"/>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <SocialIcon url=\"https://www.linkedin.com/in/leonid-belyi/\"/>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                    <SocialIcon url=\"https://github.com/LeoTheMighty\"/>\r\n                </Grid.Column>\r\n                <Grid.Column/>\r\n                <Grid.Column/>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SocialMediaLinks;","import React, { Component } from 'react';\nimport { Message, Divider, Header, Grid, Tab, Icon, Menu } from \"semantic-ui-react\";\nimport Breakpoint from \"react-socks\";\nimport './App.css';\nimport Experience from \"./screens/Experience\";\nimport Projects from \"./screens/Projects\";\nimport AboutMe from \"./screens/AboutMe\";\n// import References from \"./screens/References\";\nimport Contact from \"./screens/Contact\";\nimport ProfilePicture from \"./components/ProfilePicture\";\nimport SocialMediaLinks from \"./components/SocialMediaLinks\";\nimport resume from \"./img/resume.pdf\";\nimport Skills from \"./screens/Skills\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid fluid rows={3} columns={3} style={{marginTop: \"0px\"}}>\n                    <Grid.Row/>\n                    <Grid.Row>\n                        <Grid.Column floated=\"left\" width={1}/>\n                        <Grid.Column width={13}>\n                            <Message>\n                                <Header as=\"h2\" textAlign=\"center\">Leo Belyi</Header>\n                                <Header as=\"h4\" textAlign=\"center\">Software Engineer and Entrepreneur</Header>\n                            </Message>\n                            <ProfilePicture/>\n                        </Grid.Column>\n                        <Grid.Column floated=\"right\" width={1}/>\n                    </Grid.Row>\n                    <Grid.Row/>\n                </Grid>\n                <Tab menu={{fixed: \"top\", widths: 5, size: \"large\"}} textAlign=\"center\"\n                    panes={[{\n                        menuItem:\n                            <Menu.Item key={0}>\n                                <Icon name=\"user circle outline\"/>\n                                <Breakpoint m up>About Me</Breakpoint>\n                            </Menu.Item>,\n                        render: () => {\n                            return (\n                                <AboutMe/>\n                            );\n                        }\n                    },{\n                        menuItem:\n                            <Menu.Item key={1}>\n                                <Icon name=\"laptop\"/>\n                                <Breakpoint m up>Projects</Breakpoint>\n                            </Menu.Item>,\n                        render: () => {\n                            return (\n                                <Projects/>\n                            );\n                        }\n                    },{\n                        menuItem:\n                            <Menu.Item key={2}>\n                                <Icon name=\"suitcase\"/>\n                                <Breakpoint m up>Experience</Breakpoint>\n                            </Menu.Item>,\n                        render: () => {\n                            return (\n                                <Experience/>\n                            );\n                        }\n                    },{\n                        menuItem:\n                            <Menu.Item key={3} href={resume}>\n                                <Icon name=\"file alternate outline\"/>\n                                <Breakpoint m up>Resume</Breakpoint>\n                            </Menu.Item>,\n                        render: () => (\n                            <div align=\"center\">\n                                <p>If the link doesn't immediately load, click  {\" \"}\n                                    <a href={resume}>here</a>!</p>\n                            </div>\n                        )\n\n                    },{\n                    //     menuItem:\n                    //         <Menu.Item key={4}>\n                    //             <Icon name=\"star\"/>\n                    //             <Breakpoint m up>Skills</Breakpoint>\n                    //         </Menu.Item>,\n                    //     render: () => {\n                    //         return (\n                    //             <Skills/>\n                    //         );\n                    //     }\n                    // },{\n                    //     menuItem:\n                    //         <Menu.Item key={4}>\n                    //             <Icon name=\"group\"/>\n                    //             <Breakpoint m up>References</Breakpoint>\n                    //         </Menu.Item>,\n                    //     render: () => {\n                    //         return (\n                    //             <References/>\n                    //         );\n                    //     }\n                    // },{\n                        menuItem:\n                            <Menu.Item key={5}>\n                                <Icon name=\"text telephone\"/>\n                                <Breakpoint m up>Contact</Breakpoint>\n                            </Menu.Item>,\n                        render: () => {\n                            return (\n                                <Contact/>\n                            );\n                        }\n                    }]}\n                />\n                <Divider hidden/>\n                <Divider/>\n                <SocialMediaLinks/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport site from \"./reducers/siteReducer\";\r\nimport {reduxLog} from \"../Constants\";\r\n\r\nlet middleware;\r\nif (reduxLog) {\r\n    middleware = applyMiddleware(logger, thunk);\r\n}\r\nelse {\r\n    middleware = applyMiddleware(thunk);\r\n}\r\n\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(combineReducers({\r\n        site,\r\n    }),\r\n    composeEnhancers(middleware)\r\n);\r\n\r\nexport default store;\r\n","const initialState = {\r\n    firstLoading: true\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            state = {\r\n                ...state\r\n            };\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './semantic/dist/semantic.min.css'\nimport { BreakpointProvider, setDefaultBreakpoints } from \"react-socks\";\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nsetDefaultBreakpoints([\n    { xs: 0 },\n    { s: 376 },\n    { m: 600 },\n    { l: 769 },\n    { xl: 1025 }\n]);\n\nReactDOM.render(\n    <BreakpointProvider>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BreakpointProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/resume.1cb34e72.pdf\";"],"sourceRoot":""}